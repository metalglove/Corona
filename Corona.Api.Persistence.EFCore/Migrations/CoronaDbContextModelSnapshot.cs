// <auto-generated />
using System;
using Corona.Persistence.EFCore.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Corona.Api.Persistence.EFCore.Migrations
{
    [DbContext(typeof(CoronaDbContext))]
    partial class CoronaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Corona.Api.Domain.Entities.CoronaTimeSeriesRecord", b =>
                {
                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("Confirmed")
                        .HasColumnType("int");

                    b.Property<int>("Deaths")
                        .HasColumnType("int");

                    b.Property<int>("Recoverd")
                        .HasColumnType("int");

                    b.HasKey("Region", "TimeStamp");

                    b.ToTable("CoronaTimeSeriesRecord");
                });

            modelBuilder.Entity("Corona.Api.Domain.Entities.CoronaTimeSeriesRegion", b =>
                {
                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Region");

                    b.ToTable("CoronaTimeSeriesRegion");
                });

            modelBuilder.Entity("Corona.Api.Domain.Entities.CoronaTimeSeriesRecord", b =>
                {
                    b.HasOne("Corona.Api.Domain.Entities.CoronaTimeSeriesRegion", null)
                        .WithMany("Records")
                        .HasForeignKey("Region")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
